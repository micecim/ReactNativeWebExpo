{"version":3,"sources":["../../components/src/NativeWebRouteWrapper/index.js","../../components/src/App.js","index.js"],"names":["Wrapper","_ref","element","history","match","routeMap","closeModal","React","cloneElement","navigation","navigate","to","params","url","path","Object","keys","length","forEach","param","re","RegExp","concat","replace","escape","modal","slash","test","push","getParam","alternative","goBack","WebRoutesGenerator","_ref2","map","route","currentRoute","Component","component","react_default","a","createElement","lib","key","props","assign","Route","exact","render","instructions","Platform","select","ios","android","App","View","style","styles","container","Text","welcome","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","textAlign","margin","color","marginBottom","Home","Index","height","width"],"mappings":"8NAMA,SAASA,EAATC,GAAoE,IAAjDC,EAAiDD,EAAjDC,QAASC,EAAwCF,EAAxCE,QAASC,EAA+BH,EAA/BG,MAAOC,EAAwBJ,EAAxBI,SAAUC,EAAcL,EAAdK,WAmCpD,OAAOC,IAAMC,aAAaN,EAAS,CACjCO,WAAY,CAAEC,SAnCC,SAACC,EAAIC,GACpB,IAAIC,EAAMR,EAASM,GAAIG,KAWvB,GATIF,GAAUG,OAAOC,KAAKJ,GAAQK,OAAS,GACzCF,OAAOC,KAAKJ,GAAQM,QAAQ,SAAAC,GAC1B,IAAMC,EAAKC,OAAM,IAAAC,OAAMH,EAAN,SACjBN,EAAMA,EAAIU,QAAQH,EAAII,OAAOZ,EAAOO,OAIxCN,EAAMA,EAAIU,QAAQ,oBAAqB,IAElClB,EAASM,GAAIc,MAGX,CAEL,IAAMC,EAAQ,MAAMC,KAAKvB,EAAMS,KAAO,GAAK,IAI3CA,GAFAA,EAAMT,EAAMS,IAAMa,EAAQb,GAEhBU,QAAQ,SAAU,IAC5BpB,EAAQyB,KAAKf,QATbV,EAAQyB,KAAKf,IAsBSgB,SATT,SAACV,EAAOW,GACvB,OAAO1B,EAAMQ,OAAOO,IAAUW,GAQIC,OALrB,WACb5B,EAAQ4B,WAKRzB,eAYJ,IAiCe0B,EAjCY,SAAAC,GAAkB,IAAf5B,EAAe4B,EAAf5B,SAC5B,OAAOU,OAAOC,KAAKX,GAAU6B,IAAI,SAAAC,GAC/B,IAAMC,EAAe/B,EAAS8B,GACxBE,EAAYD,EAAaE,UAC/B,OAAIF,EAAaX,MAEbc,EAAAC,EAAAC,cAACC,EAAA,WAAD,CACEC,IAAKP,EAAatB,KAClBA,KAAMsB,EAAatB,KACnBwB,UAAW,SAAAM,GAAK,OACdL,EAAAC,EAAAC,cAACzC,EAADe,OAAA8B,OAAA,CAAS3C,QAASqC,EAAAC,EAAAC,cAACJ,EAAD,OAAmBO,EAArC,CAA4CvC,SAAUA,QAM1DkC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEH,IAAKP,EAAatB,KAClBA,KAAMsB,EAAatB,KACnBiC,MAAOX,EAAaW,MACpBC,OAAQ,SAAAJ,GAAK,OACXL,EAAAC,EAAAC,cAACzC,EAADe,OAAA8B,OAAA,CAAS3C,QAASqC,EAAAC,EAAAC,cAACJ,EAAD,OAAmBO,EAArC,CAA4CvC,SAAUA,kCCjE5D4C,EAAeC,IAASC,OAAO,CACnCC,IAAK,sDACLC,QACE,sFAKiBC,mLAEjB,OACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClBnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMH,MAAOC,EAAOG,SAApB,qCACArB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMH,MAAOC,EAAOR,cAApB,+BACAV,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMH,MAAOC,EAAOR,cAAeA,WANVZ,aAY3BoB,EAASI,IAAWC,OAAO,CAC/BJ,UAAW,CACTK,KAAM,EACNC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,WAEnBN,QAAS,CACPO,SAAU,GACVC,UAAW,SACXC,OAAQ,IAEVpB,aAAc,CACZmB,UAAW,SACXE,MAAO,UACPC,aAAc,KCvCZlE,EAAW,CACfmE,KAAM,CACJlC,UAAWgB,EACXxC,KAAM,IACNiC,OAAO,IAIL0B,mLAEF,OACElC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,MAAO,CAAEkB,OAAQ,QAASC,MAAO,UACpC3C,EAAmB,CAAE3B,aACtBkC,EAAAC,EAAAC,cAACC,EAAA,eAAD,cALYL,aAWLoC","file":"static/js/main.1fc9cd2e.chunk.js","sourcesContent":["import { Route } from \"react-router-dom\";\r\nimport { ModalRoute } from \"react-router-modal\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-router-modal/css/react-router-modal.css\";\r\n\r\nfunction Wrapper({ element, history, match, routeMap, closeModal }) {\r\n  const navigate = (to, params) => {\r\n    let url = routeMap[to].path;\r\n    // replace params ids in the url with actual values\r\n    if (params && Object.keys(params).length > 0) {\r\n      Object.keys(params).forEach(param => {\r\n        const re = RegExp(`\\:${param}\\\\??`); // eslint-disable-line no-useless-escape\r\n        url = url.replace(re, escape(params[param]));\r\n      });\r\n    }\r\n    // removing empty params from url - every string between /: and ?\r\n    url = url.replace(/\\/:(.*?)(?=\\/|$)/g, \"\");\r\n    // if the route is not a modal\r\n    if (!routeMap[to].modal) {\r\n      history.push(url);\r\n      // if the route is a modal\r\n    } else {\r\n      // checking if the url ends with a slash or not\r\n      const slash = /\\/$/.test(match.url) ? \"\" : \"/\";\r\n      // current url in the browser + slash + modal url with parameters\r\n      url = match.url + slash + url;\r\n      // removing the */ from the url\r\n      url = url.replace(/\\*\\/?/g, \"\");\r\n      history.push(url);\r\n    }\r\n  };\r\n\r\n  const getParam = (param, alternative) => {\r\n    return match.params[param] || alternative;\r\n  };\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return React.cloneElement(element, {\r\n    navigation: { navigate, getParam, goBack },\r\n    closeModal\r\n  });\r\n}\r\n\r\nWrapper.propTypes = {\r\n  element: PropTypes.element,\r\n  history: PropTypes.object,\r\n  routeMap: PropTypes.object,\r\n  closeModal: PropTypes.func,\r\n  match: PropTypes.object\r\n};\r\n\r\nconst WebRoutesGenerator = ({ routeMap }) => {\r\n  return Object.keys(routeMap).map(route => {\r\n    const currentRoute = routeMap[route];\r\n    const Component = currentRoute.component;\r\n    if (currentRoute.modal) {\r\n      return (\r\n        <ModalRoute\r\n          key={currentRoute.path}\r\n          path={currentRoute.path}\r\n          component={props => (\r\n            <Wrapper element={<Component />} {...props} routeMap={routeMap} />\r\n          )}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Route\r\n          key={currentRoute.path}\r\n          path={currentRoute.path}\r\n          exact={currentRoute.exact}\r\n          render={props => (\r\n            <Wrapper element={<Component />} {...props} routeMap={routeMap} />\r\n          )}\r\n        />\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nWebRoutesGenerator.propTypes = {\r\n  routeMap: PropTypes.object\r\n};\r\n\r\nexport default WebRoutesGenerator;\r\n","/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow\n */\n\nimport React, {Component} from 'react';\nimport {Platform, StyleSheet, Text, View} from 'react-native';\n\nconst instructions = Platform.select({\n  ios: 'Press Cmd+R to reload,\\n' + 'Cmd+D or shake for dev menu',\n  android:\n    'Double tap R on your keyboard to reload,\\n' +\n    'Shake or press menu button for dev menu',\n});\n\ntype Props = {};\nexport default class App extends Component<Props> {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.welcome}>Welcome to React Native monorepo!</Text>\n        <Text style={styles.instructions}>To get started, edit App.js</Text>\n        <Text style={styles.instructions}>{instructions}</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});\n","import React, { Component } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport WebRoutesGenerator from \"components/src/NativeWebRouteWrapper\";\r\nimport { ModalContainer } from \"react-router-modal\";\r\nimport App from \"components/src/App\"\r\n\r\n\r\nconst routeMap = {\r\n  Home: {\r\n    component: App,\r\n    path: \"/\",\r\n    exact: true\r\n  }\r\n};\r\n\r\nclass Index extends Component {\r\n  render() {\r\n    return (\r\n      <View style={{ height: \"100vh\", width: \"100vw\" }}>\r\n        {WebRoutesGenerator({ routeMap })}\r\n        <ModalContainer />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}